// <auto-generated />
using System;
using BirdPlatFormEcommerce.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BirdPlatFormEcommerce.Migrations
{
    [DbContext(typeof(SwpContext))]
    partial class SwpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Cart", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detail")
                        .HasColumnType("ntext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Feedback", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("VideoPath")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("tb_Image", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Order", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("tb_OrderDetail", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Payment", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopId");

                    b.ToTable("tb_Post", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProduct", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CateId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CateID");

                    b.Property<string>("Decription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Detail")
                        .HasColumnType("ntext");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantitySold")
                        .HasColumnType("int");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<decimal?>("SoldPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Thumbnail")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("CateId");

                    b.HasIndex("ShopId");

                    b.ToTable("tb_Product", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProductCategory", b =>
                {
                    b.Property<string>("CateId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CateID");

                    b.Property<string>("CateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CateId");

                    b.ToTable("tb_ProductCategory", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProfit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<DateTime?>("Orderdate")
                        .HasColumnType("datetime");

                    b.Property<int>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("Id")
                        .HasName("PK_tb_Sales");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShopId");

                    b.ToTable("tb_Profit", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbRole", b =>
                {
                    b.Property<string>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("tb_Role", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbShop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit")
                        .HasColumnName("Is_verified");

                    b.Property<int?>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ShopId");

                    b.ToTable("tb_Shop", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbToken", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .HasColumnType("ntext");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tb_Token", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("image");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RoleID");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int")
                        .HasColumnName("ShopID");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("tb_User", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbWishList", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("tb_WishList", (string)null);
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbCart", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbCarts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Cart_tb_Product");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbCarts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Cart_tb_User");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbFeedback", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbFeedbacks")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Feedback_tb_Product");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbFeedbacks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Feedback_tb_User");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbImage", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbImages")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Image_tb_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbOrder", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbPayment", "Payment")
                        .WithMany("TbOrders")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK_tb_Order_tb_Payment");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbOrders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Order_tb_User");

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbOrderDetail", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbOrder", "Order")
                        .WithMany("TbOrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_OrderDetail_tb_Order");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbOrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_OrderDetail_tb_Product");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbPayment", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbPayments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Payment_tb_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbPost", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbPosts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Post_tb_Product");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbShop", "Shop")
                        .WithMany("TbPosts")
                        .HasForeignKey("ShopId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Post_tb_Shop");

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProduct", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProductCategory", "Cate")
                        .WithMany("TbProducts")
                        .HasForeignKey("CateId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Product_tb_ProductCategory");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbShop", "Shop")
                        .WithMany("TbProducts")
                        .HasForeignKey("ShopId")
                        .HasConstraintName("FK_tb_Product_tb_Shop");

                    b.Navigation("Cate");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProfit", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbOrder", "Order")
                        .WithMany("TbProfits")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Profit_tb_Order");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbShop", "Shop")
                        .WithMany("TbProfits")
                        .HasForeignKey("ShopId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Sales_tb_Shop");

                    b.Navigation("Order");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbShop", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "Shop")
                        .WithOne("TbShop")
                        .HasForeignKey("BirdPlatFormEcommerce.Entities.TbShop", "ShopId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Shop_tb_User");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbToken", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbTokens")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_Token_tb_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbUser", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbRole", "Role")
                        .WithMany("TbUsers")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_User_tb_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbWishList", b =>
                {
                    b.HasOne("BirdPlatFormEcommerce.Entities.TbProduct", "Product")
                        .WithMany("TbWishLists")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_WishList_tb_Product");

                    b.HasOne("BirdPlatFormEcommerce.Entities.TbUser", "User")
                        .WithMany("TbWishLists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_tb_WishList_tb_User");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbOrder", b =>
                {
                    b.Navigation("TbOrderDetails");

                    b.Navigation("TbProfits");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbPayment", b =>
                {
                    b.Navigation("TbOrders");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProduct", b =>
                {
                    b.Navigation("TbCarts");

                    b.Navigation("TbFeedbacks");

                    b.Navigation("TbImages");

                    b.Navigation("TbOrderDetails");

                    b.Navigation("TbPosts");

                    b.Navigation("TbWishLists");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbProductCategory", b =>
                {
                    b.Navigation("TbProducts");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbRole", b =>
                {
                    b.Navigation("TbUsers");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbShop", b =>
                {
                    b.Navigation("TbPosts");

                    b.Navigation("TbProducts");

                    b.Navigation("TbProfits");
                });

            modelBuilder.Entity("BirdPlatFormEcommerce.Entities.TbUser", b =>
                {
                    b.Navigation("TbCarts");

                    b.Navigation("TbFeedbacks");

                    b.Navigation("TbOrders");

                    b.Navigation("TbPayments");

                    b.Navigation("TbShop");

                    b.Navigation("TbTokens");

                    b.Navigation("TbWishLists");
                });
#pragma warning restore 612, 618
        }
    }
}
